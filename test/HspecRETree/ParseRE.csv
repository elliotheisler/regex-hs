# Epsilon (empty regex, matches everything)
empty regex evaluates to Epsilon /  / Epsilon
repetition zero times evaluates to Epsilon / a{0,0} / Epsilon
union of nothing evaluates to Epsilon / | / Epsilon
union of repetitions of nothing evals to Epsilon / a{0,0}|b{0,0} / Epsilon
union of many things that eval to Epsilon, evaluates to Epsilon / a{0,0}|(asdf){0,0}| {0,0}||()| / Epsilon

# trimFat test cases
union of one thing evaluates to that thing / a| / Symbol 'a'
concat of one thing evaluates to that thing / a / Symbol 'a'
repetition one time evaluates to that thing / a{1,1} / Symbol 'a'
union of repetitions of nothing evals to Epsilon / (nothing){0,0}|W{1,1}|(nothing){0,0} / Symbol 'W'

# quantifiers
'*' quantifier greedy / a* / Q (Quantifier (Symbol 'a') 0 Unlimited Greedy)
'+' quantifier greedy / a+ / Q (Quantifier (Symbol 'a') 1 Unlimited Greedy)
'?' quantifier greedy / a? / Q (Quantifier (Symbol 'a') 0 (Upper 1) Greedy)
'{}' range quantifier greedy / a{2,3} / Q (Quantifier (Symbol 'a') 2 (Upper 3) Greedy)
'{}' range quantifier Unlimited greedy / a{2,} / Q (Quantifier (Symbol 'a') 2 Unlimited Greedy)
'*' quantifier lazy / a*? / Q (Quantifier (Symbol 'a') 0 Unlimited Lazy)
'+' quantifier lazy / a+? / Q (Quantifier (Symbol 'a') 1 Unlimited Lazy)
'?' quantifier lazy / a?? / Q (Quantifier (Symbol 'a') 0 (Upper 1) Lazy)
'{}' range quantifier greedy / a{2,3}? / Q (Quantifier (Symbol 'a') 2 (Upper 3) Lazy)
'{}' range quantifier Unlimited lazy / a{2,}? / Q (Quantifier (Symbol 'a') 2 Unlimited Lazy)

# non-ranges
'{' does not denote start of a range for $THIS / a{ / Concat [Symbol 'a', Symbol '{']
'{' does not denote start of a range for $THIS / a{h / Concat [Symbol 'a', Symbol '{', Symbol 'h']
'{' does not denote start of a range for $THIS / a{h} / Concat [Symbol 'a', Symbol '{', Symbol 'h', Symbol '}']
'{' does not denote start of a range for $THIS / a{1,2b} / Concat [Symbol 'a', Symbol '{', Symbol '1', Symbol ',', Symbol '2', Symbol 'b', Symbol '}']

# failures
unescaped backslash fails to parse / \ / $FAIL
lone quantifier ? fails to parse / ? / $FAIL
lone quantifier + fails to parse / + / $FAIL
lone quantifier * fails to parse / * / $FAIL
lone opening parenthesis fails to parse / ( / $FAIL
lone closing parenthesis fails to parse / ) / $FAIL
lone square opening bracket fails to parse / [ / $FAIL
nonsensical range fails to parse / a{3,2}b / $FAIL
